@page "/todo-pregled"
@using FOI_labos_Blazor.Shared

<MudContainer MaxWidth="MaxWidth.Large"
              Class="mb-2">
    <MudItem xs="12">
        <MudStack Spacing="0">
            <MudStack Row="true">
                <MudIcon Icon="@Icons.Material.Outlined.WorkOutline"
                         Size="Size.Large" />
                <MudText Typo="Typo.h5">Pregled zadataka</MudText>
            </MudStack>
            <MudItem>
                <MudText Typo="Typo.body1">Ovdje se nalazi moj popis zadataka za ovaj tjedan</MudText>
            </MudItem>
        </MudStack>
    </MudItem>

    <MudItem Class="mt-2">
        <MudPaper Elevation="1"
                  Class="pa-4">
            <MudGrid Spacing="2">
                <MudItem xs="12"
                         sm="6"
                         md="6"
                         lg="2">
                    <MudTextField T="string"
                                  Label="Tražilica"
                                  Variant="Variant.Filled"
                                  FullWidth="true"
                                  @bind-Value="_searchTerm"
                                  Margin="Margin.Dense" />
                </MudItem>

                <MudItem Class="justify-center align-center mt-2">
                    <MudButton Variant="Variant.Filled"
                               StartIcon="@Icons.Material.Filled.Search"
                               Color="Color.Secondary"
                               FullWidth="true"
                               OnClick="Search">
                        Traži
                    </MudButton>
                </MudItem>
                <MudItem Class="justify-center align-center mt-2">
                    <MudButton Variant="Variant.Outlined"
                               StartIcon="@Icons.Material.Filled.Replay"
                               Color="Color.Secondary"
                               FullWidth="true"
                               OnClick="Clear">
                        Očisti
                    </MudButton>
                </MudItem>
                
                <MudItem xs="12">
                    <MudTable T="TodoDto"
                              Hover="true"
                              Dense="true"
                              Elevation="0"
                              Striped="true"
                              Items="todosPreview">
                        <ColGroup>
                            <col style="width: 40%" />
                            <col style="width: 40%" />
                            <col style="width: 20%;" />
                        </ColGroup>
                        <HeaderContent>
                            <MudTh>
                                <MudTableSortLabel SortLabel="@nameof(TodoDto.Title)"
                                                   T="TodoDto">
                                    Naziv
                                </MudTableSortLabel>
                            </MudTh>
                            <MudTh>Gotovo</MudTh>
                            <MudTh>Akcije</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Naziv">@context.Title</MudTd>
                            <MudTd DataLabel="Gotovo">
                                <MudIcon Color="@(context.IsCompleted ? Color.Success : Color.Error)"
                                         Icon="@(Icons.Material.Outlined.RadioButtonChecked)" />
                            </MudTd>
                            <MudTd DataLabel="Akcije">
                                <MudMenu Dense="true">
                                    <ActivatorContent>
                                        <MudIconButton Icon="@Icons.Material.Filled.MoreVert"
                                                       Size="Size.Small"
                                                       Color="Color.Primary" />
                                    </ActivatorContent>
                                    <ChildContent>
                                        <MudMenuItem Icon="@Icons.Material.Filled.Edit"
                                                     OnClick="() => Edit(context)">
                                            Uredi
                                        </MudMenuItem>
                                        <MudMenuItem Icon="@Icons.Material.Filled.Delete"
                                                     OnClick="() => Delete(context)">
                                            Obriši
                                        </MudMenuItem>
                                    </ChildContent>
                                </MudMenu>
                            </MudTd>
                        </RowTemplate>
                        <NoRecordsContent>
                            <MudText>Nema podataka</MudText>
                        </NoRecordsContent>
                        <LoadingContent>
                            <MudText>Učitavanje u tijeku...</MudText>
                        </LoadingContent>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
</MudContainer>

@code {
    private string _searchTerm = string.Empty;
    private List<TodoDto> todosList = [];
    private List<TodoDto> todosPreview = [];

    protected override void OnInitialized()
    {
        todosList.AddRange(new List<TodoDto>
        {
            new() { Id = Guid.NewGuid(), Title = "Zadaća", IsCompleted = false },
            new() { Id = Guid.NewGuid(), Title = "Pranje suđa", IsCompleted = true },
            new() { Id = Guid.NewGuid(), Title = "Obrana projekta", IsCompleted = false }
        });
        todosPreview.AddRange(todosList);
    }

    private void Search()
    {
        todosPreview = todosList.Where(todo => todo.Title.Contains(_searchTerm)).ToList();
    }

    private void Clear()
    {
        _searchTerm = null;
        todosPreview.Clear();
        todosPreview.AddRange(todosList);
    }

    private void Edit(TodoDto model)
    {
        var index = todosList.FindIndex(todo => todo.Id == model.Id);
        if (index != -1)
        {
            todosList[index] = model;
        }

        var previewIndex = todosPreview.FindIndex(todo => todo.Id == model.Id);
        if (previewIndex != -1)
        {
            todosPreview[previewIndex] = model;
        }
    }


    private void Delete(TodoDto model)
    {
        todosList.Remove(model);
        if (todosPreview.Contains(model))
        {
            todosPreview.Remove(model);
        }
    }
}